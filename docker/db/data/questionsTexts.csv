idQuestionText;text;idQuestion
1;A etapa de definição de requisitos é voltada para estabelecer quais as funções são requeridas pelo sistema e as restrições sobre a operação e o desenvolvimento do software. Os requisitos de software podem ser classificados como requisitos funcionais e não funcionais.;1
2;No decorrer de um projeto de desenvolvimento de software é compreensível que mudanças venham a ocorrer, sejam por novos entendimentos dos atores envolvidos ou até mesmo de novas demandas apresentadas pelos clientes. Nesta perspectiva, a Gestão de Configuração de Software estabelece um conjunto de atividades para gerenciar alterações através de todo o ciclo de vida de um software.;2
3;"Um projeto de integração de um ERP com um CRM não implementou todos os serviços esperados e há falhas nos serviços já implementados. Uma auditoria avaliou a situação e identificou que há desentendimentos entre os membros da equipe; os membros da qualidade não compreendem o que deve ser avaliado; demandas de novos solicitantes aparecem constantemente; e o patrocinador demora muito a responder às solicitações da equipe. Tudo isso fez com que o projeto ficasse bastante atrasado e com orçamento excedido.";3
4;"Considere que as variáveis pilha e fila correspondem, respectivamente, às estruturas de dados do tipo Pilha e Fila. Para testar as duas estruturas, um programador realizou a série de operações a seguir.<br> Pilha pilha = new Pilha();<br> Fila fila = new Fila();<br> pilha.push(‘A’);<br> pilha.push(‘B’);<br> pilha.push(‘C’);<br> fila.enqueue(pilha.top());<br> fila.enqueue(pilha.top());<br> fila.enqueue(‘D’);<br> pilha.push(fila.dequeue());<br> fila.enqueue(fila.dequeue());<br> fila.enqueue(pilha.pop());<br> pilha.push(‘E’);<br> fila.enqueue(‘E’);<br> pilha.pop();";4
5;"O código Java, a seguir, contém a implementação de uma Pilha utilizando a estratégia encadeada.<br> <pre>public class No{<br> &#9;public int dado;<br> &#9;public No prox;<br> &#9;public No(int dado){<br> &#9;&#9;this.dado = dado;<br> &#9;}<br> }<br> public class PilhaEncadeada{<br> &#9;private No topo;<br> &#9;public int pop(){<br> &#9;&#9;if (topo == null)<br> &#9;&#9;&#9;return -1;<br> &#9;&#9;No lixo = topo;<br> &#9;&#9;topo = topo.prox;<br> &#9;&#9;lixo.prox = null;<br> &#9;&#9;return lixo.dado;<br> &#9;}<br> &#9;public int top(){<br> &#9;&#9;if (topo == null)<br> &#9;&#9;&#9;return -1;<br> &#9;&#9;return (topo.dado);<br> &#9;}<br> } </pre>";5
6;O modo clássico de encarar um sistema operacional é como um gerenciador de recursos. Desse ponto de vista, o sistema operacional é responsável pelo hardware do sistema. Nesse papel, ele recebe solicitações de acesso a recursos por parte das aplicações e concede ou nega tais acessos. Ao conceder solicitações de alocação, ele deve dispor com cuidado os recursos, de modo que os programas não interfiram uns nos outros. Por exemplo, é uma péssima ideia permitir que os programas tenham acesso sem restrição à memória uns dos outros. Se um programa com defeito (ou malicioso) escreve no espaço de memória do outro programa, o segundo programa travará, na melhor das hipóteses, ou produzirá resultados incorretos, na pior das hipóteses. Ou ainda, se o programa ofensivo modificar a memória do sistema operacional poderá afetar o comportamento de todo o sistema.;6
7;"Considere a realização de uma pesquisa com 1 000 pessoas para obtenção das seguintes informações: o valor da maior altura; o valor da menor altura; a média das alturas; quantas pessoas têm altura inferior à média das alturas.<br> Considere, ainda, que um programador foi selecionado para desenvolver um modelo de código que soluciona o problema automatizando a coleta das alturas e a geração das informações.";7
8;"Considere a seguinte função recursiva escrita em linguagem C:<br> <pre> int funcaoRecursiva(int n) { &#9;if (n <= 0) &#9;&#9;return 1; &#9;else &#9;&#9;return n * funcaoRecursiva(n - 1); } </pre>";8
9;Considere um banco de dados relacional para um sistema de informação bancário que armazena informações sobre clientes, contas bancárias e transações. O esquema do banco de dados é composto pelas seguintes tabelas:<br> <pre> Cliente (ID_cliente, Nome, CPF, Data_Nascimento)<br> Conta (ID_conta, ID_cliente, Tipo_conta, Saldo)<br> Transacao (ID_transacao, ID_conta_origem, ID_conta_destino, Valor, Data_transacao)<br> </pre>;9
10;"Considere um sistema de gerenciamento de biblioteca que possui classes para representar livros, usuários e transações de empréstimo. Os desenvolvedores decidiram aplicar o padrão de projeto ""Observer"" para notificar os usuários quando um livro que eles solicitaram torna-se disponível.";10
